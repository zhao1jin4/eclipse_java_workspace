<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tool="http://www.springframework.org/schema/tool"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:oxm="http://www.springframework.org/schema/oxm"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:redis="http://www.springframework.org/schema/redis"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:hdp="http://www.springframework.org/schema/hadoop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/tool
                        http://www.springframework.org/schema/tool/spring-tool.xsd
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd
                        http://www.springframework.org/schema/jms
                        http://www.springframework.org/schema/jms/spring-jms.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache.xsd
                        http://www.springframework.org/schema/lang
                        http://www.springframework.org/schema/lang/spring-lang.xsd
                        http://www.springframework.org/schema/jdbc
                        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                        http://www.springframework.org/schema/oxm
                        http://www.springframework.org/schema/oxm/spring-oxm.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/websocket
                        http://www.springframework.org/schema/websocket/spring-websocket.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd
                        http://www.springframework.org/schema/redis
                        http://www.springframework.org/schema/redis/spring-redis.xsd
                        http://www.springframework.org/schema/data/mongo
                        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd 
                        http://www.springframework.org/schema/hadoop
                        http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
                        http://www.springframework.org/schema/data/jpa
                        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                        http://www.springframework.org/schema/batch
                        http://www.springframework.org/schema/batch/spring-batch.xsd">
    <context:component-scan base-package="spring_batch.pattern"></context:component-scan>
    
    <bean id="jobLauncher"  class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
         <property name="jobRepository" ref="jobRepository" />
     </bean>
 
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
   
  
     <batch:job id="multiTypeSingleFileJob">
         <batch:step id="xmlFileReadAndWriterStep">
             <batch:tasklet>
                 <batch:chunk reader="multiTypesItemReader" writer="multiTypesItemWriter"  commit-interval="1">
                     <batch:streams>   
                         <batch:stream ref="studentWriter" />
                         <batch:stream ref="goodsWriter" />
                     </batch:streams>
                 </batch:chunk>
             </batch:tasklet>
         </batch:step>
     </batch:job>
 
     <!-- 不同格式数据的文件读取 -->
     <bean id="multiTypesItemReader"   class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
         <property name="resource" value="file:#{jobParameters['inputFilePath']}" />
         <property name="lineMapper">
             <bean class="org.springframework.batch.item.file.mapping.PatternMatchingCompositeLineMapper">
                 <property name="tokenizers">
                     <map>
                         <entry key="student*" value-ref="studentTokenizer" />
                         <entry key="goods*" value-ref="goodsTokenizer" />
                     </map>
                 </property>
                 <property name="fieldSetMappers">
                     <map>
                         <entry key="student*" value-ref="studentFieldSetMapper" />
                         <entry key="goods*" value-ref="goodsFieldSetMapper" />
                     </map>
                 </property>
             </bean>
         </property>
     </bean>
     <bean id="studentTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
         <property name="delimiter" value="," />
         <property name="names">
             <list>
                 <value>student</value>
                 <value>name</value>
                 <value>age</value>
             </list>
         </property>
     </bean>
     <bean id="studentFieldSetMapper"   class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
         <property name="prototypeBeanName" value="student" />
         <property name="distanceLimit" value="100" />
     </bean>
     
     <!-- 学生Pojo类 -->
     <bean id="student"   class="spring_batch.Student"  scope="prototype" />
 
     <bean id="goodsTokenizer"  class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
         <property name="columns" value="6-12,13-" />
         <property name="names"  value="fruite,price" />
     </bean>
     
     <bean id="goodsFieldSetMapper"  class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
         <property name="prototypeBeanName" value="goods" />
     </bean>
     
     <!-- 商品Pojo类 -->
     <bean id="goods" class="spring_batch.pattern.Goods" scope="prototype" />
 
     <bean id="multiTypesItemWriter" class="spring_batch.pattern.MultiItemWriter">
         <property name="delegates">
             <list>
                 <ref bean="studentWriter" />
                 <ref bean="goodsWriter" />
             </list>
         </property>
     </bean>
     <!-- 学生信息的写 -->
     <bean id="studentWriter"  class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
         <property name="resource" value="file:#{jobParameters['outputFilePathStudent']}" />
         <property name="lineAggregator">
             <bean class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
                 <property name="fieldExtractor">
                     <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                         <property name="names" value="name,age" />
                     </bean>
                 </property>
                 <property name="format" value="%-9s%3d" />
             </bean>
         </property>
     </bean>
     <!-- 商品信息的写 -->
     <bean id="goodsWriter"  class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
         <property name="resource"  value="file:#{jobParameters['outputFilePathGoods']}" />
         <property name="lineAggregator">
             <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                 <property name="fieldExtractor">
                     <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                         <property name="names"   value="fruite,price" />
                     </bean>
                 </property>
             </bean>
         </property>
     </bean>
</beans>
