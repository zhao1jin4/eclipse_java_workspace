<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tool="http://www.springframework.org/schema/tool"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:oxm="http://www.springframework.org/schema/oxm"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:redis="http://www.springframework.org/schema/redis"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:hdp="http://www.springframework.org/schema/hadoop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:batch="http://www.springframework.org/schema/batch"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/tool
                        http://www.springframework.org/schema/tool/spring-tool.xsd
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd
                        http://www.springframework.org/schema/jms
                        http://www.springframework.org/schema/jms/spring-jms.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache.xsd
                        http://www.springframework.org/schema/lang
                        http://www.springframework.org/schema/lang/spring-lang.xsd
                        http://www.springframework.org/schema/jdbc
                        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                        http://www.springframework.org/schema/oxm
                        http://www.springframework.org/schema/oxm/spring-oxm.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/websocket
                        http://www.springframework.org/schema/websocket/spring-websocket.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd
                        http://www.springframework.org/schema/redis
                        http://www.springframework.org/schema/redis/spring-redis.xsd
                        http://www.springframework.org/schema/data/mongo
                        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd 
                        http://www.springframework.org/schema/hadoop
                        http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
                        http://www.springframework.org/schema/data/jpa
                        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                        http://www.springframework.org/schema/batch
                        http://www.springframework.org/schema/batch/spring-batch.xsd">

	<bean id="myhome" class="spring_config.Home" > <!-- c:homeaddr="北京" -->
		<property name="homeaddr">
			<value>shanghai</value>
		</property>
	</bean>

	<!-- 放在property外部,可以指定id,class -->
	<util:map id="myMaps" map-class="java.util.TreeMap" key-type="java.lang.String" value-type="java.lang.Integer" > 
		<entry key="one" value="1111"></entry>
		<entry key="two" value="222"></entry>
	</util:map>

	<bean id="user1" class="spring_config.User" autowire="byName" scope="prototype"> <!--prototype 每次从容器中取都是新实例   -->
		<property name="age">
			<value>20</value>
		</property>
		<property name="sets">
			<util:set>
				<value>set one</value>
				<value>set two</value>
			</util:set>
			<!-- 
			<set>
				<value>set one</value>
				<value>set two</value>
			</set>
			 -->
		</property>
		<property name="lists">
			<!-- 
			<list>
				<value>list one</value>
				<value>list two</value>
			</list>
			 -->
			<util:list>
				<value>list one</value>
				<value>list two</value>
			</util:list>
		</property>
		<property name="arrays">
			<list>
				<value>arrays one</value>
				<value>arrays two</value>
			</list>
		</property>
		<property name="maps">
			<!-- 
			<util:map >
				<entry key="one" value="1111"></entry>
				<entry key="two" value="222"></entry>
			</util:map>
			 -->
			<ref bean="myMaps"/>
			<!-- 
			<map>
				<entry key="one" value="1111"></entry>
				<entry key="two" value="222"></entry>
			</map>
			 -->
		</property>
		<property name="props">
			<!-- 
			<props>
			 	<prop key="dir">C:/temp</prop>
			 	<prop key="max">200</prop>
			 </props>
			  -->
			  <util:properties>
			  	<prop key="dir">C:/temp</prop>
			 	<prop key="max">200</prop>
			  </util:properties>
		</property>
	</bean>

	<bean id="user2" class="spring_config.User" autowire="byName" scope="singleton" lazy-init="true"><!-- abstract="true" -->
		<constructor-arg index="0"  type="java.lang.Integer" value="20"/>
		<!-- <constructor-arg  name="age" value="20"/>  -->
	</bean>
	
	
	
	<!--静态工厂实例 -->
	<bean id="driverClass" class="java.lang.Class" factory-method="forName"> 
        <constructor-arg><value>org.h2.Driver</value></constructor-arg>
    </bean>
	
	<!--实例工厂实例 -->
    <bean id="driverInstance" class="java.lang.Class" factory-method="newInstance" factory-bean="driverClass" depends-on="driverClass" />
	
    <context:annotation-config /> <!--使用 annotation方式来注入,就可以使用@Autowire 默认是按type,  @Resource,是JDK的, 默认是按name -->
  	 
</beans>
