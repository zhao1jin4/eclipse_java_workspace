<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>SpringMVC</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>

    
<!--   Hassian  使用   /WEB-INF/remoting-servlet.xml
	/WEB-INF/spring_annotation.xml 为  WebApplicationContextUtils.getRequiredWebApplicationContext
	ServletWithSpring 类要打开ContextLoaderListener

<context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>/WEB-INF/spring_annotation.xml</param-value>
</context-param>
<listener>
	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>
-->
<!--  @Autowired 不行？？？？ 
<listener>
	<listener-class>myservlet.spring.ListenerWithSpring</listener-class>
</listener>
 -->

  <!-- Hessian server 要注册  ContextLoaderListener     找  /WEB-INF/remoting-servlet.xml  
	<servlet>
	    <servlet-name>remoting</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <load-on-startup>1</load-on-startup> 
	</servlet>
	<servlet-mapping>
	    <servlet-name>remoting</servlet-name>
	    <url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>
	-->
	<!--   server 方式2 ,basicHessianExporter 是 spring bean 的 id
	<servlet>
	    <servlet-name>basicHessianExporter</servlet-name> 
	    <servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
	    <servlet-name>basicHessianExporter</servlet-name>
	    <url-pattern>/remoting/hessianServer</url-pattern>
	</servlet-mapping>
	 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.mvc</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>spring_mvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
        <!--
      /WEB-INF/spring_freemarker.xml
      /WEB-INF/spring_jstl.xml 
      classpath:springweb_websocket/websocket_beans.xml
      
      /WEB-INF/spring-session-redis.xml    use jstl
      /WEB-INF/spring_annotation.xml 为 WebApplicationContextUtils.getRequiredWebApplicationContext
       -->
      <param-value>/WEB-INF/spring_freemarker.xml
      </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
    <servlet-name>spring_mvc</servlet-name>
    <url-pattern>*.mvc</url-pattern>
  </servlet-mapping>
    
    <!--  web socket 不知何用 -->
   <absolute-ordering>
       <name>spring_web</name>
   </absolute-ordering>
    
  <!--Spring整合Servlet  和/WEB-INF/spring_annotation.xml 一起用
   Filter类中就可以注入Spring容器中的类 WebApplicationContextUtils 不如这种方便 
   <filter>
    <filter-name>myFilterWithSpring</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>myFilterWithSpring</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  -->
  <!--  spring session 开关    
  <filter>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSessionRepositoryFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
 -->
  
	 
	 <!--    ============druid monitor============ 
	 
 	http://127.0.0.1:8080/J_SpringMVC/druid  登录密码就是web.xml中配置的
	 -->
		 
	<servlet>
	  <servlet-name>DruidStatView</servlet-name>
	  <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	   <init-param>  
		<!-- 允许清空统计数据 -->  
		<param-name>resetEnable</param-name>  
		<param-value>true</param-value>  
	    </init-param>  
	    <init-param>  
		<!-- 用户名 -->  
		<param-name>loginUsername</param-name>  
		<param-value>UserDruid</param-value>  
	    </init-param>  
	    <init-param>  
		<!-- 密码 -->  
		<param-name>loginPassword</param-name>  
		<param-value>PassDruid</param-value>  
		</init-param>
		<init-param>
	  		<param-name>allow</param-name>
	  		<param-value>127.0.0.1/24,128.242.128.1</param-value>
	  	</init-param>
	  	<init-param>
	  		<param-name>deny</param-name>
	  		<param-value>128.242.127.4</param-value>
	  	</init-param>
		<init-param>
	  		<param-name>resetEnable</param-name>
	  		<param-value>false</param-value>
	  	</init-param>
	</servlet>
	<servlet-mapping>
	  <servlet-name>DruidStatView</servlet-name>
	  <url-pattern>/druid/*</url-pattern> 
	</servlet-mapping>
	 
	 
	 <filter>
	  	<filter-name>DruidWebStatFilter</filter-name>
	  	<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
	  	<init-param>
	  		<param-name>exclusions</param-name>
	  		<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
	  	</init-param>
		<init-param>
			<param-name>profileEnable</param-name>  <!-- 配置profileEnable能够监控单个url调用的sql列表。 -->
			<param-value>true</param-value>
		</init-param>
	
	  </filter>
	  <filter-mapping>
	  	<filter-name>DruidWebStatFilter</filter-name>
	  	<url-pattern>/*</url-pattern>   
	  </filter-mapping>
	   
	   
	  <error-page>
	  	<error-code>404</error-code>
	  	<location>/WEB-INF/jsp/error/notFound2.jsp</location>
	  </error-page>
	  <error-page>
	  	<exception-type>java.sql.SQLException</exception-type>
	  	<location>/WEB-INF/jsp/error/showDBError2.jsp</location>
	  </error-page>
	  
</web-app>