<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tool="http://www.springframework.org/schema/tool"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:oxm="http://www.springframework.org/schema/oxm"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:redis="http://www.springframework.org/schema/redis"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:hdp="http://www.springframework.org/schema/hadoop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util-4.2.xsd
                        http://www.springframework.org/schema/tool
                        http://www.springframework.org/schema/tool/spring-tool-4.2.xsd
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
                        http://www.springframework.org/schema/jms
                        http://www.springframework.org/schema/jms/spring-jms-4.2.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-4.2.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
                        http://www.springframework.org/schema/lang
                        http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
                        http://www.springframework.org/schema/jdbc
                        http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
                        http://www.springframework.org/schema/oxm
                        http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                        http://www.springframework.org/schema/websocket
                        http://www.springframework.org/schema/websocket/spring-websocket-4.2.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-4.0.xsd
                        http://www.springframework.org/schema/redis
                        http://www.springframework.org/schema/redis/spring-redis-1.0.xsd
                        http://www.springframework.org/schema/data/mongo
                        http://www.springframework.org/schema/data/mongo/spring-mongo-1.7.xsd 
                        http://www.springframework.org/schema/hadoop
                        http://www.springframework.org/schema/hadoop/spring-hadoop-2.1.xsd
                        http://www.springframework.org/schema/data/jpa
                        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
						default-autowire="byName">

	<!--  <util:properties id="myProperties"	location="classpath:mybatis_spring/jdbc.properties" />	  -->
	<!-- <context:property-placeholder location="jdbc.properties"/>  -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>		

	<bean id="dataSourceRemote" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${urlRemote}" />
		<property name="user" value="${usernameRemote}" />
		<property name="password" value="${passwordRemote}" />
                <!-- 初始化连接池时连接数量为5个 -->
		<property name="initialPoolSize" value="5" />
                <!-- 允许最小连接数量为5个 -->
		<property name="minPoolSize" value="5" />
                <!-- 允许最大连接数量为20个 -->
		<property name="maxPoolSize" value="20" />
                <!-- 允许连接池最大生成100个PreparedStatement对象 -->
		<property name="maxStatements" value="100" />
                <!-- 连接有效时间，连接超过3600秒未使用，则该连接丢弃 -->
		<property name="maxIdleTime" value="3600" />
                <!-- 连接用完时，一次产生的新连接步进值为2 -->
		<property name="acquireIncrement" value="2" />
                <!-- 获取连接失败后再尝试10次，再失败则返回DAOException异常 -->
		<property name="acquireRetryAttempts" value="10" />
                <!-- 获取下一次连接时最短间隔600毫秒，有助于提高性能 -->
		<property name="acquireRetryDelay" value="600" />
                <!-- 检查连接的有效性，此处小弟不是很懂什么意思 -->
		<property name="testConnectionOnCheckin" value="true" />
                <!-- 每个1200秒检查连接对象状态 -->
		<property name="idleConnectionTestPeriod" value="1200" />
                <!-- 获取新连接的超时时间为10000毫秒 -->
		<property name="checkoutTimeout" value="10000" />
	</bean>

<bean id="dataSourceLocal" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
    <property name="driverClassName" ><value>${driver}</value></property>
    <property name="url" value="${url}"></property>
    <property name="username" value="${username}"></property>
    <property name="password" value="${password}"></property>
</bean>

  <bean id="dynamicDataSource" class="mybatis_spring.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="dataSourceLocal" key="dataSourceLocal" />
                <entry value-ref="dataSourceRemote" key="dataSourceRemote" />
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSourceLocal" />
    </bean>
    
	<!-- MyBatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <property name="dataSource" ref="dynamicDataSource" />
		
		<!--myBatis自己的事务
		<property name="transactionFactory" >
			<bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory"/>
		</property>
		 -->
	
		<property name="configLocation" value="classpath:mybatis_spring/Configuration.xml"></property>
		 <!--
		  <property name="configurationProperties">
	        <props>
	          <prop key="jdbcTypeForNull">NULL</prop>
	        </props>
	    </property>
		<property name="mapperLocations" value="classpath*:org/zhaojin/mybatis/vo/**/*.xml" />
		 
		<property name="plugins">
			<list>
				<bean class="mybastis_spring.SQLLogInterceptor" />
			</list>
		</property>
		--> 
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>

	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
		 <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"></property>
        <property name="isolationLevelName" value="ISOLATION_SERIALIZABLE"></property>
	</bean>
	   
    <bean id="batchSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> 
        <constructor-arg index="0" ref="sqlSessionFactory" />
        <constructor-arg index="1" value="BATCH" />
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> 
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    
  
    
    <tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>
    
	<!-- 你不能在Spring管理的SqlSession上调用SqlSession.commit()，SqlSession.rollback()或SqlSession.close()方法 -->
    
    <!-- 继承SqlSessionDaoSupport , 自动注入sqlSession -->
    <bean id="dao" class="mybatis_spring.DaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    
	<bean id="servcie" class="mybatis_spring.Service">
		<property name="dao" ref="dao"></property>
		<property name="transactionTemplate" ref="transactionTemplate"></property>
	</bean>
    
    
    <bean id="annoationDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="mybatis_spring.AnnoationDao" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
    </bean>
    
    
    <bean id="pagingItemReader" class="org.mybatis.spring.batch.MyBatisPagingItemReader"
       p:pageSize="10" >
	  <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	  <property name="queryId" value="StudentMapper.getAll" />      <!-- 如是 MapperFactoryBean的用类的全包名.方法名 , 如是@形式的,有 @Param("_e") 不行 ???   -->
	</bean>
	
	 <bean id="batchItemWriter" class="org.mybatis.spring.batch.MyBatisBatchItemWriter">
      <property name="sqlSessionFactory" ref="sqlSessionFactory" />
      <property name="sqlSessionTemplate" ref="batchSqlSessionTemplate"></property>
      <property name="statementId" value="EmployeeMapper.insertEmployee" />
    </bean>
   

</beans> 