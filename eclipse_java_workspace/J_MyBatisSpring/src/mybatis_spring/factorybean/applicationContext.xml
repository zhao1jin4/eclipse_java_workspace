<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util-3.2.xsd
						http://www.springframework.org/schema/jee
						http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-3.1.xsd"
						default-autowire="byName">

	  <util:properties id="myProperties"	location="classpath:jdbc.properties" /> 
	  <!-- util:properties的实现类是PropertiesFactoryBean -->
	
	<!--	
	<bean  id="myProperties"	 class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>		
	 -->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"  >
		<!-- 
		<property name="driverClass" value="${driver}" />
		<property name="jdbcUrl" value="${url}" />
		<property name="user" value="${username}" />
		<property name="password" value="${password}" />
		 -->
		 <property name="driverClass" value="#{myProperties['driver']}" />
		<property name="jdbcUrl" value="#{myProperties['url']}" />
		<property name="user" value="#{myProperties['username']}" />
		<property name="password" value="#{myProperties['password']}" />
		
                <!-- 初始化连接池时连接数量为5个 -->
		<property name="initialPoolSize" value="5" />
                <!-- 允许最小连接数量为5个 -->
		<property name="minPoolSize" value="5" />
                <!-- 允许最大连接数量为20个 -->
		<property name="maxPoolSize" value="20" />
                <!-- 允许连接池最大生成100个PreparedStatement对象 -->
		<property name="maxStatements" value="100" />
                <!-- 连接有效时间，连接超过3600秒未使用，则该连接丢弃 -->
		<property name="maxIdleTime" value="3600" />
                <!-- 连接用完时，一次产生的新连接步进值为2 -->
		<property name="acquireIncrement" value="2" />
                <!-- 获取连接失败后再尝试10次，再失败则返回DAOException异常 -->
		<property name="acquireRetryAttempts" value="10" />
                <!-- 获取下一次连接时最短间隔600毫秒，有助于提高性能 -->
		<property name="acquireRetryDelay" value="600" />
                <!-- 检查连接的有效性，此处小弟不是很懂什么意思 -->
		<property name="testConnectionOnCheckin" value="true" />
                <!-- 每个1200秒检查连接对象状态 -->
		<property name="idleConnectionTestPeriod" value="1200" />
                <!-- 获取新连接的超时时间为10000毫秒 -->
		<property name="checkoutTimeout" value="10000" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--
		      MapperFactoryBean,会自动找与类名相同的位置XmlEmployeeInterface.xml,如找不到会使用已经有配置
		<property name="configLocation" value="classpath:org/zh/mybatis/Configuration.xml"></property>
	    <property name="mapperLocations" value="classpath*:org/zh/mybatis/vo/**/*.xml" />
	     -->
     
        <property name="dataSource" ref="dataSource" />
     <!--myBatis自己的事务
        <property name="transactionFactory" >
            <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory"/>
        </property>
         -->
	</bean>
	
	
	<!-- 就不用每个类 配置 MapperFactoryBean  
		但  PropertyPlaceholderConfigurer 无用, 可以使用 PropertiesFactoryBean 和 SpEL 表达式来作为替代
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="mybatis_spring.factorybean.dao" />   <!-- 逗号分隔多个 -->
	</bean>
	
	<!-- 如有 @Param("_e") 不行 ??? -->
	 <bean id="annoEmployeeBatchItemWriter" class="org.mybatis.spring.batch.MyBatisBatchItemWriter">
      <property name="sqlSessionFactory" ref="sqlSessionFactory" />
      <property name="statementId" value="mybatis_spring.factorybean.dao.AnnoEmployeeInterface.insert" />
    </bean>
     
    <bean id="xmlEmployeeBatchItemWriter" class="org.mybatis.spring.batch.MyBatisBatchItemWriter">
      <property name="sqlSessionFactory" ref="sqlSessionFactory" />
      <property name="statementId" value="mybatis_spring.factorybean.dao.XmlEmployeeInterface.insertXML" />
    </bean>
    
	<!-- 
	
	<bean id="xmlEmployeeInterface" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="mybatis_spring.factorybean.dao.XmlEmployeeInterface" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
	
	<bean id="annoEmployeeInterface" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="mybatis_spring.factorybean.dao.AnnoEmployeeInterface" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	 -->
	 
	 
	 
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"></property>
        <property name="isolationLevelName" value="ISOLATION_SERIALIZABLE"></property>
    </bean>
       
    <bean id="batchSqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
        <constructor-arg index="0" ref="sqlSessionFactory" />
        <constructor-arg index="1" value="BATCH" />
    </bean>
      <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    
    <context:component-scan base-package="mybatis_spring.factorybean"/> 
    
    <tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>
    
    
</beans>