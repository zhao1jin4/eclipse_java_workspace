<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tool="http://www.springframework.org/schema/tool"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:oxm="http://www.springframework.org/schema/oxm"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:websocket="http://www.springframework.org/schema/websocket"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:redis="http://www.springframework.org/schema/redis"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
    xmlns:hdp="http://www.springframework.org/schema/hadoop"	
    xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:ldap="http://www.springframework.org/schema/ldap"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:c="http://www.springframework.org/schema/c"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd
                        http://www.springframework.org/schema/tool
                        http://www.springframework.org/schema/tool/spring-tool.xsd
                        http://www.springframework.org/schema/jee
                        http://www.springframework.org/schema/jee/spring-jee.xsd
                        http://www.springframework.org/schema/jms
                        http://www.springframework.org/schema/jms/spring-jms.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache.xsd
                        http://www.springframework.org/schema/lang
                        http://www.springframework.org/schema/lang/spring-lang.xsd
                        http://www.springframework.org/schema/jdbc
                        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                        http://www.springframework.org/schema/oxm
                        http://www.springframework.org/schema/oxm/spring-oxm.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/websocket
                        http://www.springframework.org/schema/websocket/spring-websocket.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security.xsd
                        http://www.springframework.org/schema/redis
                        http://www.springframework.org/schema/redis/spring-redis.xsd
                        http://www.springframework.org/schema/data/mongo
                        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd 
						http://www.springframework.org/schema/data/jpa
                        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
						http://www.springframework.org/schema/data/neo4j    
                        http://www.springframework.org/schema/data/neo4j/spring-neo4j.xsd
						http://www.springframework.org/schema/hadoop
                        http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
                        http://www.springframework.org/schema/batch
                        http://www.springframework.org/schema/batch/spring-batch.xsd
						http://www.springframework.org/schema/rabbit 
                        http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
						http://www.springframework.org/schema/ldap 
						http://www.springframework.org/schema/ldap/spring-ldap.xsd">
    
	<bean id="hashedCredentialsMatcher" class ="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5"></property>
		<property name="hashIterations" value="3"></property> 
	</bean>
	<bean id="mySpringRealm" class="shiro_spring_xml.MySpringRealm" >
		<property name="credentialsMatcher" ref="hashedCredentialsMatcher"></property>
	</bean>
	<bean id="mySpringRealm2" class="shiro_spring_xml.MySpringRealm2" >
		<property name="credentialsMatcher" ref="hashedCredentialsMatcher"></property>
	</bean>
	
	<bean id="myModularAuthen" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationStrategy" >
			<bean class="org.apache.shiro.authc.pam.AllSuccessfulStrategy"></bean>
			<!-- 默认 AtLeastOne 只要一个realm成功就算成功
			<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
			<bean class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"></bean>
			 -->
		</property>
		<property name="realms" >
			<list >
				 <ref bean="mySpringRealm"/>
				 <ref bean="mySpringRealm2"/>
			</list>
		</property>
	</bean>
	<bean id="myModularAuthor" class="org.apache.shiro.authz.ModularRealmAuthorizer">
		<property name="realms" >
			<list >
				 <ref bean="mySpringRealm"/>
				 <ref bean="mySpringRealm2"/>
			</list>
		</property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager"></property>
		
		<!-- 
		<property name="realm" ref="mySpringRealm" />
		 -->
		 <!-- 
		<property name="realms" >
			<list >
				 <ref bean="mySpringRealm"/>
				 <ref bean="mySpringRealm2"/>
			</list>
		</property>
		 -->
		 <property name="authenticator" ref="myModularAuthen"></property>
		 <property name="authorizer" ref="myModularAuthor"></property>  
	</bean>
	
	<bean id ="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehcacheManager" ></property>
	</bean>
	
	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:shiro_spring_xml/ehcache.xml"></property>
		<property name="shared" value="true"></property>
	</bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property  name="loginUrl" value="/login.mvc"/> 
		<property name="successUrl" value="/main.mvc"/> 
		<property name="unauthorizedUrl" value="/noPerm.jsp"/>
		<property name="filters"> 
		 	<util:map> 
		 		 <entry key="authc" value-ref="formAuthenticationFilter" />
			</util:map> 
		</property> 
		<property name="filterChainDefinitions">
			<value>
				#=后是过滤器的顺序 ，路径也是从上到下的顺序匹配
				/js/**=anon
				/img/**=anon
				/main.mvc=anon
				/logout.mvc=logout
				#logout 退出过滤器,会清session,页面直接请求这个地址,不用自己实现
				
			<!-- /employee/create.mvc=authc,roles[adminRole]
				/employee/query.mvc=authc,roles[queryRole]
				/employee/delete.mvc=perms[employee:delete]
 			-->
				#登录表单提交地址要authc
				/login.mvc=authc
				#/**=authc
			</value>
		</property>
	</bean>
	 
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
 		
	<bean id="formAuthenticationFilter"    class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="j_username" />
		<property name="passwordParam" value="j_password" />
		<property name="rememberMeParam" value="j_rememberMe"/> 
	</bean> 




</beans>

	