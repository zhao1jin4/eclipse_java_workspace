<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  	<parent>
		<groupId>org.my</groupId>
		<artifactId>cover_parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
  <artifactId>cover_testng</artifactId>
  <packaging>jar</packaging>
  <name>coverTestNG</name> <!-- 一些工具会显示为项目名,如NetBeans -->
  <url>http://maven.apache.org</url>
  
  <dependencies>
   	<dependency>
	  <groupId>org.testng</groupId>
	  <artifactId>testng</artifactId>
	  <scope>test</scope>
	</dependency>
	
	<dependency>
	    <groupId>org.mockito</groupId>
	    <artifactId>mockito-core</artifactId>
	    <scope>test</scope>
	</dependency> 
	<dependency>
	  <groupId>org.seleniumhq.selenium</groupId>
	  <artifactId>selenium-java</artifactId>
	</dependency>
	  
	<dependency>
	    <groupId>com.codeborne</groupId>
	    <artifactId>phantomjsdriver</artifactId>
	</dependency>

  </dependencies>
  <build>
   <plugins>
  	 <!--打包方式2,依赖jar包会放在目录下
   	  <plugin> 
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>2.4</version> 
			<configuration> 
				<descriptors>
					<descriptor>assembly.xml</descriptor>
				</descriptors>
			</configuration>
			<executions>
				<execution>
					<id>make-assembly</id>
					<phase>package</phase>
					<goals>
						<goal>single</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		 -->
		  <!--打包方式3 要在jar外有lib目录,  但没有生成？？？？  
		 <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<configuration>
				<source>1.8</source>
				<target>1.8</target>
				<archive>
					<manifest>
						<mainClass>com.xx.MainApp</mainClass>
						<addClasspath>true</addClasspath>
					<classpathPrefix>lib/</classpathPrefix>
					</manifest> 
				</archive>
				<classesDirectory>
				</classesDirectory>
			</configuration>
		</plugin>
		--> 
   </plugins>
  </build>
</project>
