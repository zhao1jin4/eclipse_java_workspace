<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.my</groupId>
  <artifactId>cover_parent</artifactId>
  <packaging>pom</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>coverParent</name> <!-- 一些工具会显示为项目名,如NetBeans -->
  <url>http://maven.apache.org</url>
  
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
	<maven.compiler.source>1.8</maven.compiler.source>
	<maven.compiler.target>1.8</maven.compiler.target>
	
	<spring.version>5.2.0.RELEASE</spring.version>
	<spring-security.version>5.2.10.RELEASE</spring-security.version>
  </properties>
  
  <modules>
	<module>cover_junit</module>
	<module>cover_testng</module>
	<module>cover_web</module>
	<module>cover_webchild</module>
  </modules>
  
  <dependencies>
   	 
	
  </dependencies>
  <dependencyManagement>
     <dependencies> 
	   <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${spring.version}</version>
		</dependency>
	   	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		-->
		
		<!-- security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring-security.version}</version>
		</dependency>	
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
	
		 

  	</dependencies>
  </dependencyManagement>
  <build>
  	<plugins>
  	
		<!-- <plugin>   
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-compiler-plugin</artifactId>
		    <version>3.8.0</version>
		    <configuration>
		      <source>1.8</source>
		      <target>1.8</target>
		    </configuration>
		  </plugin>   -->
		  
		   <!-- 打包源码插件,生成-sources.jar  也可单独运行 mvn source:jar 但clean后就没了 -->
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-source-plugin</artifactId>
			<version>2.2.1</version>
			<executions>
				<execution>
					<id>attach-sources</id>
					<goals>
						<goal>jar</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		 
		
		 
		 <!-- 	<skip>true</skip> 配置这个 相当于-DskipTests=true 
 			<include>junit/CalculatorTestSuit.java</include>  指定入口类 @SuiteClasses  
 		-->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.7.1</version><!-- 只能2.7.1 版本才不会报找不到org/apache/commons/lang3/StringUtils-->
			<configuration>
				<includes>
					<include>junit/CalculatorTestSuit.java</include> 
				</includes>
				<!-- 
				<configuration>
					<skip>true</skip> 
				</configuration>
				 -->
			</configuration>
		</plugin>
		<plugin> <!--  对 <type>bundle</type>要加这个才行 -->
			<groupId>org.apache.felix</groupId>  
		    <artifactId>maven-bundle-plugin</artifactId>  
		    <extensions>true</extensions>  
		</plugin> 
		
		<!--  mvn clean package cobertura:cobertura  没有也会生成   target/site/cobertura/index.html
	  	<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>cobertura-maven-plugin</artifactId>
			<version>2.7</version>
		</plugin> 
		  -->
		  
		  
	</plugins>
	
	</build>
	<!--  mvn clean package cobertura:cobertura 没有也会生成   target/site/cobertura/index.html
	<reporting>
		<plugins>
		  <plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>cobertura-maven-plugin</artifactId>
			<version>2.7</version>
		  </plugin> 
		</plugins>
	</reporting>
	-->
	
	<profiles>  <!-- intellij IDE maven视图可以动态切换环境 -->
		<profile>
			<id>local</id>
			<properties>
				<env>dev</env>
				<loglevel>DEBUG,Console</loglevel>
				<!-- 里面的是自己使用的自属性 spring 配置中可以使用${env} ,log4j.properties可用${loglevel} -->
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault><!-- 项目目录下的 dev 目录成为classpath -->
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<env>test</env>
				<loglevel>DEBUG,Console</loglevel>
			</properties>
		</profile>
	</profiles>
	<!--就可以不从官方下载jar,速度快很多-->
	<repositories>  
	    <repository>  
	        <id>central</id>  
	        <name>Maven Repository Switchboard</name>  
	        <url>http://repo.spring.io/libs-release/</url>  
	        <layout>default</layout>  
	        <snapshots>  
	            <enabled>false</enabled>  
	        </snapshots>  
	    </repository>  
	</repositories>  
	<pluginRepositories>
		<pluginRepository>
			<id>dev_nexus</id>
			<url>http://repo.spring.io/libs-release/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	
  <distributionManagement> <!-- 为mvn deploy时用使用id做对应  -->
		<repository>
			<id>releases</id>
			<url>http://10.1.5.228:8081/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<url>http://10.1.5.228:8081/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>  
	
</project>
